exit
rankings =       parse_rankings(
        JSON.parse(
          Net::HTTP.get(uri, {'Authorization' => "Bearer #{api_key}"})
        )
      )
continue
response
exit
response
exit
expected_response.map { |game| game.deep_symbolize_keys! }
expected_response.deep_symbolize_keys!
expected_response = JSON.parse(File.read('spec/api/odds_api/fixtures/successful_response.json'))
expected_response = JSON.parse(File.read('spec/api/odds_api/fixtures/successful_response.json')).deep_symbolize_keys!
expected_response = JSON.parse(File.read('spec/api/odds_api/fixtures/successful_response.json')).deep_symbolize_keys
expected_response = JSON.parse(File.read('spec/api/odds_api/fixtures/successful_response.json')).deep_symbolize_keeys
expected_response
subject
expected_response == subject
expected_response = JSON.parse(File.read('spec/api/odds_api/fixtures/successful_response.json'))
subject.to_json
JSON.parse(subject.to_json)
subject.to_json
subject
exit
JSON.parse(Net::HTTP.get(url)).map { |game| game.deep_symbolize_keys }
exit
resp = JSON.parse File.read('spec/api/odds_api/fixtures/valid_response.json').map { |game| puts "yay" }
resp = JSON.parse File.read('spec/api/odds_api/fixtures/valid_response.json').map
resp = JSON.parse File.read('spec/api/odds_api/fixtures/valid_response.json')
subject
exit
resp = JSON.parse File.read('spec/api/odds_api/fixtures/valid_response.json')
resp = _
JSON.parse File.read('spec/api/odds_api/fixtures/valid_response.json')
File.read('spec/api/odds_api/fixtures/valid_response.json')
File.read('README.md')
File.read('spec/api/odds_api/fixtures/odds_api/valid_response.json')
__dir__
pwd
File.read('fixtures/odds_api/valid_response.json')
exit
File.read('../../fixtures/odds_api/valid_response.json')
exit
subject
exit
subject
exit
subject
exit
Rails.env
exit
subject
exit
subject
exit
FactoryBot.create(:week)
Week.current
OddsApi::Client.get_odds_for_week(Week.current)
subject
exit
subject
